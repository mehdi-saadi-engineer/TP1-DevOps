version: "3.8" # // Version du schéma Docker Compose

services:
  backend: # // Service backend (Spring Boot)
    build: ./simpleapi # // Construit l'image à partir du dossier ./simpleapi
    container_name: backend # // Nom du conteneur
    depends_on:
      - tp1-db # // Ce service dépend de la base de données
    networks:
      - app-network # // Connecté au réseau interne
    environment: # // Variables d'environnement pour se connecter à PostgreSQL
      SPRING_DATASOURCE_URL: jdbc:postgresql://tp1-db:5432/db
      SPRING_DATASOURCE_USERNAME: usr
      SPRING_DATASOURCE_PASSWORD: pwd
    restart: unless-stopped # // Redémarre sauf si on l'arrête manuellement

  tp1-db: # // Service base de données PostgreSQL
    build: . # // Construit à partir du répertoire courant (où se trouve Dockerfile)
    container_name: tp1-db # // Nom du conteneur
    environment: # // Paramètres initiaux de la BDD
      POSTGRES_DB: db
      POSTGRES_USER: usr
      POSTGRES_PASSWORD: pwd
    volumes:
      - postgres-data:/var/lib/postgresql/data # // Volume pour persister les données
    networks:
      - app-network # // Même réseau que les autres services
    restart: unless-stopped # // Politique de redémarrage

  http-server: # // Serveur HTTP (Apache par ex.) jouant le rôle de reverse proxy
    build: ./http-server # // Construit à partir du dossier ./http-server
    container_name: http-server # // Nom du conteneur
    depends_on:
      - backend # // Lance après le backend
    ports:
      - "80:80" # // Expose le port 80 de l'hôte
    networks:
      - app-network # // Connecté au même réseau
    restart: unless-stopped # // Politique de redémarrage

networks:
  app-network: # // Réseau interne pour la communication entre services

volumes:
  postgres-data: # // Volume Docker pour les données PostgreSQL
